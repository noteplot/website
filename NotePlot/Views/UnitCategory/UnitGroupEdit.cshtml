@model NotePlot.Models.UnitCategory
@{
    string atr_disabled = "disabled";
}

<form id="unitCategory" method="POST" action=@ViewBag.Action data-form-mode=@ViewBag.Mode>
    @Html.AntiForgeryToken()
    <div>
        <input type="hidden" id="UnitGroupID" name="UnitGroupID" value="@Model.UnitGroupID" />
        <div class="input-prepend">
            <label for="UnitGroupShortName" class="np_label">Краткое название</label>
            <input type="text" id="UnitGroupShortName" name="UnitGroupShortName" placeholder="Краткое название" size="24" value="@Model.UnitGroupShortName" @if (Model.LoginID == 0) { @atr_disabled } />
        </div>
        <div class="input-prepend">
            <label for="UnitGroupName" class="np_label">Название</label>
            <input type="text" id="UnitGroupName" name="UnitGroupName" placeholder="Название" size="48" value="@Model.UnitGroupName" @if (Model.LoginID == 0) { @atr_disabled } />
        </div>
        @if (Model.LoginID != 0)
        {
        <div class="input-prepend">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
        }
    </div>
</form>
<script type="text/javascript">
    $(function () {
            var adata = new Object();
            // шаблон кнопок для вставки в журнал групп измерений #unitgroups
            var rowTools =
                '<div class="npRowTools" style="display:none">'
                + '<a href="/UnitCategory/Edit/{{UnitGroupID}}" class="npRowEdit np_button" np_dialog_title="Группа единиц измерений">'
                + '<div class="icon"><i class="fa fa-pencil"></i></div>'
                + '</a>'
                + '<a href="/UnitCategory/Delete/{{UnitGroupID}}" class="npRowDelete np_button" data-deleted-name="{{UnitGroupShortName}}">'
                + '<div class="icon"><i class="fa fa-times"></i></div>'
                + '</a>'
                + '</div>';
                
            adata.onSuccess = function (dta) {
                    if ($.fn.DataTable.isDataTable('#unitgroups')) {
                        var
                            jsn = JSON.parse(dta),
                            _table = $("#unitgroups").DataTable();
                        
                        if ($('#unitCategory').attr("data-form-mode") == "edit") { // функция изменения данных в строке после редактирования
                            var
                                _tr = _table.row('.selected'),_data = _tr.data();
                            _data[0] = jsn.UnitGroupID;
                            _data[1] = jsn.UnitGroupShortName;
                            _data[2] = jsn.UnitGroupName;
                            _tr.data(_data).draw();
                            _table.$('tr.selected').find(".npRowTools").css("display", "block"); // после обновления display:none
                        }
                        else
                            if ($('#unitCategory').attr("data-form-mode") == "new") { // новая строка
                                rowTools = rowTools.replaceAll("{{UnitGroupID}}", jsn.UnitGroupID).replaceAll("{{UnitGroupShortName}}", jsn.UnitGroupShortName);
                                _table.row.add([jsn.UnitGroupID, jsn.UnitGroupShortName, jsn.UnitGroupName, rowTools]);//.draw(false);
                                _table.$('tr.selected').removeClass('selected').css("display", "block"); // снимаем выделение
                                _table.order([0, 'desc']).draw(); // первая строка - добавленная
                            }
                            else {
                                location.reload();
                            }
                        // Находим диалог и закрываем
                        var _md = $('#unitCategory').parents('.dialog').first().attr('id');
                        if (_md != undefined) {
                            $('#' + _md).dialog("close");
                        }
                    }
                    else {
                        location.reload();
                    }
            }

        $("#unitCategory").bind('submit', adata, np_AjaxFormSubmit);
        // очистка сообщений об ошибках по клику
        $("#unitCategory input").bind('click', np_AjaxFormInputClick);
        $("#unitCategory")
            .validate({
                rules: {
                    LoginName: {
                        required: true,
                        minlength: 2
                    },
                    Password: {
                        required: true,
                        minlength: 2
                    },
                    messages: {
                        UnitGroupShortName: {
                            required: "поле должно быть заполнено",
                            minlength: "в поле должно быть минимум 2 символа"
                        },
                        UnitGroupName: {
                            required: "поле должно быть заполнено",
                            minlength: "в поле должно быть минимум 2 символа"
                        }
                    }
                }
            });
    });

</script>
@model NotePlot.Models.Unit

@{
    string atr_disabled = "disabled";
}
<div class="np-fVrtLayout" id="unitPanel">
    <form id="unit" method="POST" action=@ViewBag.Action data-form-mode=@ViewBag.Mode>
        @Html.AntiForgeryToken()
        <input type="hidden" id="UnitID" name="UnitID" value="@Model.UnitID" />
        <input type="hidden" id="UnitGroupID" name="UnitGroupID" value="@Model.UnitGroupID" data-target="UnitGroupID" data-target-value="" />
        <p>
            <label for="UnitShortName" class="np_label">Краткое наименование</label>
            <input class="ui-widget ui-widget-content ui-corner-all np-ui-input" type="text" id="UnitShortName" name="UnitShortName" placeholder="Краткое наименование" value="@Model.UnitShortName" maxlength=24 @if (Model.LoginID == 0) { @atr_disabled } />
        </p>
        <p>
            <label for="UnitName" class="np_label">Полное наименование</label>
            @*<input class="ui-widget ui-widget-content ui-corner-all np-ui-input" type="text" id="UnitName" name="UnitName" placeholder="Полное наименование" value="@Model.UnitName" maxlength=48 @if (Model.LoginID == 0) { @atr_disabled } />*@
            <textarea type="text" rows="2" id="UnitGroupName" class="ui-widget ui-widget-content ui-corner-all np-ui-input" name="UnitName" value="@Model.UnitName" maxlength=48 @if (Model.LoginID == 0) { @atr_disabled }>@Model.UnitName</textarea>
        </p>
        <div>
            <button type="button" id="btnSelectGroup" class="openDialog ui-button ui-corner-all" href="/UnitCategory/SelectUnitCategoryList" np_dialog_title="Выбор группы" @if (Model.LoginID == 0) { @atr_disabled }>Группа</button>
            <input class="ui-widget ui-widget-content ui-corner-all np-ui-input" type="text" readonly id="UnitGroupShortName" name="UnitGroupShortName" value="@Model.UnitGroupShortName" @if (Model.LoginID == 0) { @atr_disabled } data-target="UnitGroupShortName" data-target-value="" />
        </div>
    </form>
    <div class="np-buttons">
        @if (Model.LoginID != 0)
        {
            <button id="btnOk" class="np-left ui-button ui-corner-all">Да</button>
        }
        <button id="btnCancel" class="np-right ui-button ui-corner-all">Отмена</button>
    </div>
</div>
<script type="text/javascript">
    $(function () {
        $('#btnSelectGroup').on('click', function (e) {
            e.preventDefault();
            OpenDialog(this, null, true);
        });
        // отрабатываем событие изменения атрибута при выборе из диалога
        $("#UnitGroupID").on("targetValueChanged", function (e) {
            e.preventDefault();
            $(this).val($(this).attr("data-target-value")); // присваиваем значение атрибута
        });
        $("#UnitGroupShortName").on("targetValueChanged", function (e) {
            e.preventDefault();
            $(this).val($(this).attr("data-target-value")); // присваиваем значение атрибута
        });

        // submit
        var adata = new Object();
        // шаблон кнопок для вставки в журнал групп измерений #unitgroups
        var rowTools =
            '<div class="npRowTools" style="display:block">'
            + '<a href="/Unit/Edit/{{UnitID}}" class="npRowEdit np_button" np_dialog_title="Ед.измерения">'
            + '<div class="icon"><i class="fa fa-pencil-alt"></i></div>'
            + '</a>'
            + '<a href="/Unit/Delete/{{UnitID}}" class="npRowDelete np_button" data-deleted-name="{{UnitShortName}}">'
            + '<div class="icon"><i class="fa fa-times"></i></div>'
            + '</a>'
            + '</div>';
        adata.onSuccess = function (dta) {
            if ($.fn.DataTable.isDataTable('#units')) {
                var
                    jsn = JSON.parse(dta),
                    _table = $("#units").DataTable();

                if ($('#unit').attr("data-form-mode") == "edit") { // функция изменения данных в строке после редактирования
                    var
                        _tr = _table.row('.selected'),
                        _data = _tr.data();
                    _data[0] = jsn.UnitID;
                    //_data[1] == rowTools
                    _data[2] = jsn.UnitGroupShortName;
                    _data[3] = jsn.UnitShortName;
                    _data[4] = jsn.UnitName;
                    _tr.data(_data).draw();
                    //_table.$('tr.selected').find(".npRowTools").css("display", "block"); // после обновления display:none
                }
                else
                    if ($('#unit').attr("data-form-mode") == "new") {
                        rowTools = rowTools.replaceAll("{{UnitID}}", jsn.UnitGroupID).replaceAll("{{UnitShortName}}", jsn.UnitGroupShortName);
                        _table.row.add([jsn.UnitID, rowTools, jsn.UnitGroupShortName, jsn.UnitShortName, jsn.UnitName]);//.draw(false);
                        _table.order([0, 'desc']).draw(); // первая строка - добавленная
                        _table.$('tr.selected').removeClass('selected');//.css("display", "none"); // снимаем выделение
                    }
                    else {
                        location.reload();
                    }
                // Находим диалог и закрываем
                var _md = $('#unit').parents('.dialog').first().attr('id');
                if (_md != undefined) {
                    $('#' + _md).dialog("close");
                }
            }
            else {
                location.reload();
            }
        }
        $('#btnOk').on('click', function (e) {
            e.preventDefault();
            np_AjaxFormInputClick(); // очистка ошибок
            if ($('#unit').valid())
                $('#unit').submit();
        });

        $('#btnCancel').on('click', function (e) {
            e.preventDefault();
            // Находим диалог и закрываем
            var _md = $('#unitPanel').parents('.dialog').first().attr('id');
            if (_md != undefined) {
                $('#' + _md).dialog("close");
            }
        });

        $("#unit").bind('submit', adata, np_AjaxFormSubmit);
        // очистка сообщений об ошибках по клику 
        $("#unit").bind('click', np_AjaxFormInputClick); 
        $("#unit")
            .validate({
                rules: {
                    UnitShortName: {
                        required: true,
                        maxlength: 24
                    },
                    UnitName: {
                        required: true,
                        maxlength: 48
                    },
                    UnitGroupShortName: {
                        required: true
                    }
                },
                messages: {
                    UnitShortName: {
                        required: "Обязательно для заполнения",
                    },
                    UnitName: {
                        required: "Обязательно для заполнения",
                    },
                    UnitGroupShortName: {
                        required: "Обязательно для выбора"
                    }
                }
            });


    });
</script>
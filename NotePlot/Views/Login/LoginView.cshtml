@*
@section styles{
    <style>
    </style>
}
*@
<form action="/Login/LoginInput" method="POST" id="loginInput" np_reload="true">
    @Html.AntiForgeryToken()
    <div class="row-fluid">
        <div class="row-form">
                <input type="text" name="LoginName" placeholder="имя" />
        </div>
        <div class="row-form">
                <input type="text" name="Password" placeholder="пароль" autocomplete="off"/>
        </div>
        <div class="row-form">
                <input type="checkbox" name="RememberMe" /> <span>Запомнить</span>
                @*@Html.CheckBox("RememberMe", false)*@
        </div>
        <div class="row-form">
                @*<input class="btn" type="submit" value="Вход" />*@
                <button class="btn" type="submit">Вход<span class="icon-arrow-next icon-white"></span></button>
                <button class="btn1">Регистрация <span class="icon-arrow-next icon-white"></span></button>
        </div>
    </div>
</form>
<script type="text/javascript">
    $(function () {
        // подписка на submit
        /*
        //Пример передачи обработчиков через методы класса
        var adata = new Object();
        adata.onSuccess = function (data) {
            alert('OK');
        $("#loginInput").bind('submit',adata,np_AjaxFormSubmit);
        }
        */
        $("#loginInput").bind('submit',np_AjaxFormSubmit);             
        // очистка сообщений об ошибках по клику  
        $("#loginInput input").bind('click', np_AjaxFormInputClick);        
        $("#loginInput")
            .validate({
                rules: {
                    LoginName: {
                        required: true,
                        minlength: 2
                    },
                    Password: {
                        required: true,
                        minlength: 1
                    }
                }
            });

        function np_AjaxOnSuccess(data) {
            alert('OK');
        };
    });

</script>

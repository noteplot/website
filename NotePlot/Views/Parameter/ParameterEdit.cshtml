@model NotePlot.Models.Parameter

@{
    string atr_checked = "checked", atr_disabled = "disabled", atr_hidden="hidden";
}

    @section styles{
        <style>
            #np_parameter_edit fieldset {
                border: 1px solid #ccc;
                background: #f8f8f8;
            }

            #np_parameter_edit fieldset legend {
                font-weight: bold;
            }

            /*.np_label {
                display: block;
            }*/

            #np_parameter_edit p {
                margin: 0;
            }
        </style>
    }
    <p class="np-href">
        <a id="np_ParameterList" href="@Url.Action("ParameterList", "Parameter")">Параметры измерения</a> -> @if (Model.ParameterID == null)
        {<a id="np_CurrentParameter" href="@Url.Action("ParameterNew", "Parameter" , new { id=Model.ParameterID })">Новый параметр</a>}
        else
        {<a id="np_CurrentParameter" href="@Url.Action("ParameterEdit", "Parameter" , new { id=Model.ParameterID })">Текущий параметр</a>}
    </p>
    <div class="np-tool-bar">
        @if (Model.LoginID != 0)
        {
            <button id="btnParameterSave" class="ui-button ui-corner-all" @atr_disabled>Сохранить</button>
            <button id="btnParameterCancel" class="ui-button ui-corner-all" @atr_disabled>Отменить</button>
        }
        <button id="btnReturnParameterList" class="ui-button ui-corner-all">Список параметров</button>
        @if (Model.ParameterID != null)
        {
            <a href="@Url.Action("ParameterNew", "Parameter")" class="ui-button ui-corner-all" title="Новый параметр">
                <div class="icon"><i class="fa fa-plus"></i></div>
            </a>
        }
    </div>

    <form id="np_parameter_edit" method="POST" action=@ViewBag.Action>
        @Html.AntiForgeryToken()
        @*
            @if (Model.LoginID != 0)
            {
                <input type="submit" value="Записать" id="np_parameter_save" @if (Model.LoginID == 0) { @atr_disabled } />
            }
*@
    <div class="np-inputForm">
        <fieldset>
            <legend>Параметр</legend>
            <input type="hidden" id="ParameterID" name="ParameterID" value="@Model.ParameterID" />
            <input type="hidden" id="ParameterGroupID" name="ParameterGroupID" value="@Model.ParameterGroupID" />
            <input type="hidden" id="ParameterUnitID" name="ParameterUnitID" value="@Model.ParameterUnitID" />
            <input type="hidden" id="ParameterValueTypeID" name="ParameterValueTypeID" value="@Model.ParameterValueTypeID" />
            <input type="hidden" id="LoginID" name="LoginID" value="@Model.LoginID" />

            <div class="np-clearfix">
                <div class="np-column-left np-column-1 np-clearfix">
                    <button type="button" class="openDialog ui-button ui-corner-all" href="/ParameterGroup/ListDialog" np_dialog_title="Выбор группы" np_dialog_width="500px" @if (Model.LoginID == 0) { @atr_disabled }>Группа</button>
                </div>
                <input type="text" readonly id="ParameterGroupShortName" name="ParameterGroupShortName" class="np-column-left np-short-name np-ui-input" value="@Model.ParameterGroupShortName" @if (Model.LoginID == 0) { @atr_disabled } />
            </div>
            <div class="np-clearfix">
                <label for="ParameterShortName" class="np-column-left np-column-1 np-ui-input">Краткое наименование</label>
                <input type="text" id="ParameterShortName" name="ParameterShortName" class="np-column-left np-short-name np-ui-input" maxlength="24" value="@Model.ParameterShortName" @if (Model.LoginID == 0) { @atr_disabled } />
            </div>
            <div class="np-clearfix">
                <label for="ParameterName" class="np-column-left np-column-1 np-ui-input">Полное наименование</label>
                @*<input type="text" id="ParameterName" name="ParameterName" maxlength="48" value="@Model.ParameterName" @if (Model.LoginID == 0) { @atr_disabled } />*@
                <textarea class="np-column-left np-short-name np-ui-input" id="ParameterName" name="ParameterName" maxlength=48 value="@Model.ParameterName" @if (Model.LoginID == 0) { @atr_disabled }>@Model.ParameterName</textarea>
            </div>
            <div class="np-clearfix">
                @*<label for="ParameterUnitShortName" class="np_label"></label>*@
                <div class="np-column-left np-column-1 np-clearfix">
                    <button type="button" class="openDialog ui-button ui-corner-all" href="/Unit/ListDialog" np_dialog_title="Выбор ед.изменения" np_dialog_width="500px" @if (Model.LoginID == 0) { @atr_disabled }>Ед. измерения</button>
                </div>
                <input type="text" readonly id="ParameterUnitShortName" name="ParameterUnitShortName" class="np-column-left np-short-name np-ui-input" value=@Model.ParameterUnitShortName @if (Model.LoginID == 0) { @atr_disabled } />
            </div>
            <div class="np-clearfix">
                <label class="np-column-left np-column-1 np-ui-input">Тип параметра</label>
                <div class="np-column-left np-clearfix">
                    @foreach (NotePlot.Models.ParameterType pt in @ViewBag.ListType)
                    {
                        <p>
                            <input type="radio" id="ParameterTypeID_@pt.ParameterTypeID" name="ParameterTypeID" value="@pt.ParameterTypeID" @if (pt.ParameterTypeID == Model.ParameterTypeID) { @atr_checked } @if (Model.LoginID == 0) { @atr_disabled } />
                            <label for="ParameterTypeID_@pt.ParameterTypeID">@pt.ParameterTypeName</label>
                        </p>
                    }
                </div>
            </div>
            <div class="np-clearfix">
                <div class="np-column-left np-column-1 np-clearfix">
                    <button type="button" class="openDialog ui-button ui-corner-all" href="/ParamValueType/ListDialog" np_dialog_title="Выбор типа значения" np_dialog_width="600px" @if (Model.LoginID == 0) { @atr_disabled }>Тип значения</button>
                </div>
                @*<input type="text" readonly id="ParameterValueTypeShortName" name="ParameterValueTypeShortName" class="np-column-left np-short-name np-ui-input" value="@Model.ParameterValueTypeShortName" @if (Model.LoginID == 0) { @atr_disabled } />*@
                <textarea class="np-column-left np-short-name np-ui-input" id="ParameterValueTypeShortName" name="ParameterValueTypeShortName" value="@Model.ParameterValueTypeShortName" @if (Model.LoginID == 0) { @atr_disabled }>@Model.ParameterValueTypeShortName</textarea>
            </div>
            <div class="rangePanel" @if (Model.ParameterTypeID != 0) { @atr_hidden}>
                <div class="np-clearfix">
                    <label for="ParameterValueMin" class="np-column-left np-column-1 np-ui-input">Мин. значение</label>
                    <input type="text" id="ParameterValueMin" class="rangeValue np_decimal_format np-column-left np-short-name np-ui-input" name="ParameterValueMin" maxlength="28" value="@Model.ParameterValueMin" np_dec_precision="22" np_dec_scale="6" np_dec_minus @if (Model.LoginID == 0)
                    { @atr_disabled } />
                </div>
                <div class="np-clearfix">
                    <label for="ParameterValueMax" class="np-column-left np-column-1 np-ui-input">Макс. значение</label>
                    <input type="text" id="ParameterValueMax" class="rangeValue np_decimal_format np-column-left np-short-name np-ui-input" name="ParameterValueMax" maxlength="28" value="@Model.ParameterValueMax" np_dec_precision="22" np_dec_scale="6" np_dec_minus @if (Model.LoginID == 0)
                    { @atr_disabled } />
                </div>
            </div>
            @if (Model.ParameterID != null)
            {
                <div class="np-clearfix">
                    <label for="ParameterActive" class="np-column-left np-column-1 np-ui-input">Доступен</label>
                    <input type="checkbox" id="ParameterActive" name="Active" class="np-column-left np-ui-input" value="@Model.Active" @if (@Model.Active) { @atr_checked } @if (Model.LoginID == 0) { @atr_disabled } />
                </div>
            }
            else
            {
                <div class="np-clearfix">
                    <input class="np-column-left np-ui-input" type="checkbox" id="Active" name="Active" value="1" hidden checked />
                </div>
            }
         </fieldset>
    </div>
<div id="relationSection">
    @if (Model.ParameterTypeID > 0)
    {
        @await Component.InvokeAsync("ParamRelations", new { ParameterID = @Model.ParameterID, LoginID = @Model.LoginID, })
    }
</div>
</form>
@section scripts{
    <script type="text/javascript">
        $(function () {
            np_insertRow = new np_InsertRow(
                "#parameterRelations",
                "<tr>" +
                "<td hidden><input type='text' id='ParameterID' name='ParameterID' value='{ParameterID}'/></td>" +
                "<td hidden><input type='text' id='MathOperationID' name='MathOperationID' value='{MathOperationID}'/></td>" +
                "<td>{ParameterShortName}</td><td>{MathOperationName}</td></tr>",
                ["ParameterID", "MathOperationID", "ParameterShortName", "MathOperationName"]
            )
            // подключение числового формата + удаляем лишние нули в конце после разделителя
            $('#np_parameter_edit .np_decimal_format').npDecimalInput().npDecimalFormat();
            $('#np_parameter_edit .np_decimal_format').on('blur', function () {
                $('#np_parameter_edit .np_decimal_format').npDecimalFormat();
            });

            var wrapper = $(".lookupField"),
                inp = wrapper.find("input"),
                btn = wrapper.find(".button"),
                lbl = wrapper.find("mark");

            // Crutches for the :focus style:
            inp.focus(function () {
                wrapper.addClass("focus");
            }).blur(function () {
                wrapper.removeClass("focus");
            });

            var file_api = (window.File && window.FileReader && window.FileList && window.Blob) ? true : false;

            inp.change(function () {
                var i = 0;
            }).change();

            $('input:radio[name = "ParameterTypeID"]').on('change', function (e) {
                e.preventDefault();
                if ($(this).val() > 0) {
                    //alert($(this).val());
                    var container = $("#relationSection");
                    $.get("/Parameter/LoadRelations", { id: $("#ParameterID").val() }, function (data) { container.html(data); });
                    $("input.rangeValue").attr("readonly", true).val(""); // чистим для расчетных параметров,т.к. диапазон не имеет смысла
                    $(".rangePanel").attr("hidden", "hidden");
                }
                else //чистим секцию связей
                {
                    $("#relationSection").empty();
                    $("input.rangeValue").removeAttr("readonly"); // убираем для простых
                    $(".rangePanel").removeAttr("hidden"); 
                }
            });
            var adata = new Object();
            adata.onSuccess = function () {
                //location.reload();
                window.location.replace("/Parameter/ParameterList"); // Перенаправление на список параметров + не сохраняем историю
            }
            //adata.lName = 'ParameterRelations'; - это уже не нужно
            $("#np_parameter_edit input[type=text],input[type=checkbox],input[type=radio],textarea").on('input change keypress', function (e) {
                /*
                if ($('#btnParameterSave').attr('disabled')) {
                    $('#btnParameterSave').removeAttr('disabled');
                }
                if ($('#btnParameterCancel').attr('disabled')) {
                    $('#btnParameterCancel').removeAttr('disabled');
                }
                */
                refreshPage();
            });
            $('#btnParameterSave').on('click', function (e) {
                e.preventDefault();
                np_AjaxFormInputClick(); // очистка ошибок
                if ($('#np_parameter_edit').valid())
                    $('#np_parameter_edit').submit();
            });

            $('#btnParameterCancel').on('click', function (e) {
                np_LoaderShow();
                document.getElementById("np_CurrentParameter").click()
                //location.reload();
            });

            $('#btnReturnParameterList').on('click', function (e) {
                np_LoaderShow();
                document.getElementById("np_ParameterList").click()
            });

            $("#np_parameter_edit").bind('submit', adata, np_AjaxFormSubmitEx);
            // очистка сообщений об ошибках по клику
            $("#np_parameter_edit").bind('click', np_AjaxFormInputClick);
            $("#np_parameter_edit")
                .validate({
                    rules: {
                        ParameterGroupShortName: {
                            required: true
                        },
                        ParameterShortName: {
                            required: true,
                            minlength: 2
                        },
                        ParameterName: {
                            required: true,
                            minlength: 2
                        },
                        ParameterUnitShortName: {
                            required: true
                        },
                        ParameterTypeID: {
                            required: true
                        },
                        ParameterValueTypeShortName: {
                            required: true
                        }
                    },
                    messages: {
                        ParameterGroupShortName: {
                            required: "поле не заполнено или заполнено не верно",
                        },
                        ParameterShortName: {
                            required: "поле не заполнено или заполнено не верно",
                            minlength: "в поле должно быть минимум 2 символа",
                        },
                        ParameterName: {
                            required: "поле не заполнено или заполнено не верно",
                            minlength: "в поле должно быть минимум 2 символа",
                        },
                        ParameterUnitShortName: {
                            required: "поле не заполнено или заполнено не верно"
                        },
                        ParameterTypeID: {
                            required: "поле не заполнено или заполнено не верно"
                        },
                        ParameterValueTypeShortName: {
                            required: "поле не заполнено или заполнено не верно"
                        }
                    }
                });
        });
        $(document).ready(function () { fix(); });
        $(window).resize(function () {
            fix();
            $(".lookupField input").triggerHandler("change");
        });

        function refreshPage() {
            if ($('#btnParameterSave').attr('disabled')) {
                $('#btnParameterSave').removeAttr('disabled');
            }
            if ($('#btnParameterCancel').attr('disabled')) {
                $('#btnParameterCancel').removeAttr('disabled');
            }
        }
    </script>
}
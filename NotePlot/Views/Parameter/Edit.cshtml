@model NotePlot.Models.Parameter

@{
    string atr_checked = "checked", atr_disabled = "disabled";
}

@section styles{
    <style>
        #np_parameter_edit fieldset {
            border: 1px solid #ccc;
            background: #f8f8f8;
        }

            #np_parameter_edit fieldset legend {
                font-weight: bold;
            }

        .np_label {
            display: block;
        }

        #np_parameter_edit p {
            margin: 0;
        }
    </style>
}

<p class="np-href">
    <a id="np_ParameterList" href="@Url.Action("ParameterList", "Parameter")">Список параметров</a> -> @if (Model.ParameterID == null)
    {<a id="np_CurrentParameter" href="@Url.Action("New", "Parameter" , new { id=Model.ParameterID })">Новый параметр</a>}
    else
    {<a id="np_CurrentParameter" href="@Url.Action("Edit", "Parameter" , new { id=Model.ParameterID })">Текущий параметр</a>}
</p>
<div class="np-tool-bar">
    @if (Model.LoginID != 0)
    {
        <button id="btnParameterSave" class="ui-button ui-corner-all" @atr_disabled>Сохранить</button>
        <button id="btnParameterCancel" class="ui-button ui-corner-all" @atr_disabled>Отменить</button>
    }
    <button id="btnReturnParameterList" class="ui-button ui-corner-all">Список параметров</button>
</div>

<form id="np_parameter_edit" method="POST" action=@ViewBag.Action>
    @Html.AntiForgeryToken()
    @*
        @if (Model.LoginID != 0)
        {
            <input type="submit" value="Записать" id="np_parameter_save" @if (Model.LoginID == 0) { @atr_disabled } />
        }
    *@
    <fieldset>
        <legend>Параметр</legend>
        <input type="hidden" id="ParameterID" name="ParameterID" value="@Model.ParameterID" />
        <input type="hidden" id="ParameterGroupID" name="ParameterGroupID" value="@Model.ParameterGroupID" />
        <input type="hidden" id="ParameterUnitID" name="ParameterUnitID" value="@Model.ParameterUnitID" />
        <input type="hidden" id="ParameterValueTypeID" name="ParameterValueTypeID" value="@Model.ParameterValueTypeID" />
        <input type="hidden" id="LoginID" name="LoginID" value="@Model.LoginID" />

        <div class="input-prepend">
            <button type="button" class="add-on openDialog" href="/ParameterGroup/ListDialog" np_dialog_title="Выбор группы" np_dialog_width="500px" @if (Model.LoginID == 0) { @atr_disabled }>Группа</button>
            <input type="text" readonly id="ParameterGroupShortName" name="ParameterGroupShortName" size="24" value="@Model.ParameterGroupShortName" @if (Model.LoginID == 0) { @atr_disabled } />
        </div>
        <p>
            <label for="ParameterShortName" class="np_label">Название</label>
            <input type="text" id="ParameterShortName" name="ParameterShortName" placeholder="Название" size="24" value="@Model.ParameterShortName" @if (Model.LoginID == 0) { @atr_disabled } />
        </p>
        <p>
            <label for="ParameterName" class="np_label">Описание</label>
            <input type="text" id="ParameterName" name="ParameterName" size="48" value="@Model.ParameterName" @if (Model.LoginID == 0) { @atr_disabled } />
        </p>
        <p>
            <label for="ParameterUnitShortName" class="np_label"></label>
            <div class="input-prepend">
                <button type="button" class="add-on openDialog" href="/Unit/ListDialog" np_dialog_title="Выбор ед.изменения" np_dialog_width="500px" @if (Model.LoginID == 0) { @atr_disabled }>Ед. измерения</button>
                <input type="text" readonly id="ParameterUnitShortName" name="ParameterUnitShortName" size="24" value=@Model.ParameterUnitShortName @if (Model.LoginID == 0) { @atr_disabled } />
            </div>
        </p>
        @foreach (NotePlot.Models.ParameterType pt in @ViewBag.ListType)
        {
            <p>
                <input type="radio" id="ParameterTypeID_@pt.ParameterTypeID" name="ParameterTypeID" value="@pt.ParameterTypeID" @if (pt.ParameterTypeID == Model.ParameterTypeID) { @atr_checked } @if (Model.LoginID == 0) { @atr_disabled } />
                <label for="ParameterTypeID_@pt.ParameterTypeID">@pt.ParameterTypeName</label>
            </p>
        }
        <div class="input-prepend">
            <button type="button" class="add-on openDialog" href="/ParamValueType/ListDialog" np_dialog_title="Выбор типа значения" np_dialog_width="600px" @if (Model.LoginID == 0) { @atr_disabled }>Тип значения</button>
            <input type="text" readonly id="ParameterValueTypeShortName" name="ParameterValueTypeShortName" size="24" value="@Model.ParameterValueTypeShortName" @if (Model.LoginID == 0) { @atr_disabled } />
        </div>
        <p>
            <label for="ParameterValueMax" class="np_label">Макс. значение</label>
            <input type="text" id="ParameterValueMax" class="rangeValue np_decimal_format" name="ParameterValueMax" size="28" value="@Model.ParameterValueMax" np_dec_precision="22" np_dec_scale="6" np_dec_minus @if (Model.LoginID == 0) { @atr_disabled } />
        </p>
        <p>
            <label for="ParameterValueMin" class="np_label">Мин. значение</label>
            <input type="text" id="ParameterValueMin" class="rangeValue np_decimal_format" name="ParameterValueMin" size="28" value="@Model.ParameterValueMin" np_dec_precision="22" np_dec_scale="6" np_dec_minus @if (Model.LoginID == 0) { @atr_disabled } />
        </p>
        @if (Model.ParameterID != null)
        {
            <p>
                <label for="ParameterActive" class="np_label">Доступен</label>
                <input type="checkbox" id="ParameterActive" name="Active" value="@Model.Active" @if (@Model.Active) { @atr_checked } @if (Model.LoginID == 0) { @atr_disabled } />
            </p>
        }
    </fieldset>
    <div id="relationSection">
        @if (Model.ParameterTypeID > 0)
        {
            @await Component.InvokeAsync("ParamRelations", new { ParameterID = @Model.ParameterID, LoginID = @Model.LoginID, })
        }
    </div>
</form>
@section scripts{
    <script type="text/javascript">
        $(function () {
            np_insertRow = new np_InsertRow(
                "#parameterRelations",
                "<tr>" +
                "<td hidden><input type='text' id='ParameterID' name='ParameterID' value='{ParameterID}'/></td>" +
                "<td hidden><input type='text' id='MathOperationID' name='MathOperationID' value='{MathOperationID}'/></td>" +
                "<td>{ParameterShortName}</td><td>{MathOperationName}</td></tr>",
                ["ParameterID", "MathOperationID", "ParameterShortName", "MathOperationName"]
            )
            // подключение числового формата + удаляем лишние нули в конце после разделителя
            $('#np_parameter_edit .np_decimal_format').npDecimalInput().npDecimalFormat();
            $('#np_parameter_edit .np_decimal_format').on('blur', function () {
                $('#np_parameter_edit .np_decimal_format').npDecimalFormat();
            });

            var wrapper = $(".lookupField"),
                inp = wrapper.find("input"),
                btn = wrapper.find(".button"),
                lbl = wrapper.find("mark");

            // Crutches for the :focus style:
            inp.focus(function () {
                wrapper.addClass("focus");
            }).blur(function () {
                wrapper.removeClass("focus");
            });

            var file_api = (window.File && window.FileReader && window.FileList && window.Blob) ? true : false;

            inp.change(function () {
                var i = 0;
            }).change();

            $('input:radio[name = "ParameterTypeID"]').on('change', function (e) {
                e.preventDefault();
                if ($(this).val() > 0) {
                    //alert($(this).val());
                    var container = $("#relationSection");
                    $.get("/Parameter/LoadRelations", { id: $("#ParameterID").val() }, function (data) { container.html(data); });
                    $("input.rangeValue").attr("readonly", true).val(""); // чистим для расчетных параметров,т.к. диапазон не имеет смысла
                }
                else //чистим секцию связей
                {
                    $("#relationSection").empty();
                    $("input.rangeValue").removeAttr("readonly"); // убираем для простых
                }
            });
            var adata = new Object();
            adata.onSuccess = function () {
                //location.reload();
                window.location.replace("/Parameter/ParameterList"); // Перенаправление на список параметров + не сохраняем историю
            }
            //adata.lName = 'ParameterRelations'; - это уже не нужно
            $("#np_parameter_edit input[type=text],textarea").on('input change keypress', function (e) {
                if ($('#btnParameterSave').attr('disabled')) {
                    $('#btnParameterSave').removeAttr('disabled');
                }
                if ($('#btnParameterCancel').attr('disabled')) {
                    $('#btnParameterCancel').removeAttr('disabled');
                }
            });
            $('#btnParameterSave').on('click', function (e) {
                e.preventDefault();
                np_AjaxFormInputClick(); // очистка ошибок
                $('#np_parameter_edit').submit();
            });

            $('#btnParameterCancel').on('click', function (e) {
                np_LoaderShow();
                document.getElementById("np_CurrentParameter").click()
                //location.reload();
            });

            $('#btnReturnParameterList').on('click', function (e) {
                np_LoaderShow();
                document.getElementById("np_ParameterList").click()
            });

            $("#np_parameter_edit").bind('submit', adata, np_AjaxFormSubmitEx);
            // очистка сообщений об ошибках по клику
            $("#np_parameter_edit").bind('click', np_AjaxFormInputClick);
            $("#np_parameter_edit")
                .validate({
                    rules: {
                        ParameterGroupShortName: {
                            required: true
                        },
                        ParameterShortName: {
                            required: true,
                            minlength: 2
                        },
                        ParameterName: {
                            required: true
                        },
                        ParameterUnitShortName: {
                            required: true
                        },
                        ParameterTypeID: {
                            required: true
                        },
                        ParameterValueTypeShortName: {
                            required: true
                        }
                    },
                    messages: {
                        ParameterGroupShortName: {
                            required: "поле не заполнено или заполнено не верно",
                        },
                        ParameterShortName: {
                            required: "поле не заполнено или заполнено не верно",
                            minlength: "в поле должно быть минимум 2 символа",
                        },
                        ParameterName: {
                            required: "поле не заполнено или заполнено не верно",
                            minlength: "в поле должно быть минимум 2 символа",
                        },
                        ParameterUnitShortName: {
                            required: "поле не заполнено или заполнено не верно"
                        },
                        ParameterTypeID: {
                            required: "поле не заполнено или заполнено не верно"
                        },
                        ParameterValueTypeShortName: {
                            required: "поле не заполнено или заполнено не верно"
                        }
                    }
                });
        });
        $(document).ready(function () { fix(); });
        $(window).resize(function () {
            fix();
            $(".lookupField input").triggerHandler("change");
        });
    </script>
}
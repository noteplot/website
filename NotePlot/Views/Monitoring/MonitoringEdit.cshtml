@model NotePlot.Models.Monitoring

@{
    string atr_checked = "checked", atr_disabled = "disabled";
}

@section styles{
    <style>
        .input_date {
            width:8em !important;
        }
        .input_time {
            width: 5em !important;
        }

        #np_monitoring_edit table, #np_monitoring_edit th, #np_monitoring_edit td {
            border: 1px solid black;
            border-style: solid;
            border-width: 1px;
            border-collapse: collapse;
            padding: 2px;
        }
        #np_monitoring_edit table {
            table-layout: fixed;
            width: 100%;
            text-align: left;
            min-width: 150px;
        }

        #np_monitoring_edit td, #np_monitoring_edit th {
            word-wrap: break-word;
        }
        #np_monitoring_edit .col1 {
            width: 18em;
            text-align: center;
            vertical-align: top;
        }
        #np_monitoring_edit .col2 {
            width: 6em;
            text-align: center;
            vertical-align: top;
        }
    </style>
}

<p>
    <a href="@Url.Action("MonitorList", "Monitor")">Список шаблонов</a> -> <a href="@Url.Action("MonitoringList", "Monitoring" , new { id=Model.MonitorID })">@Model.MonitorShortName</a> -> @if(Model.MonitoringID == null) {<a href="@Url.Action("MonitoringNew", "Monitoring" , new { id=Model.MonitorID })">Новое измерение</a>} else {<a href="@Url.Action("MonitoringEdit", "Monitoring" , new { id=Model.MonitoringID })">Текущее измерение</a>}
</p>

<form id="np_monitoring_edit" method="POST" action="/Monitoring/MonitoringEditJson ">
    @Html.AntiForgeryToken()
    <input type="submit" value="Записать" id="btnMonitoringSave" @atr_disabled />
    <fieldset>
        <legend></legend>
        <input type="hidden" id="MonitoringID" name="MonitoringID" value="@Model.MonitoringID" />
        <input type="hidden" id="MonitorID" name="MonitorID" value="@Model.MonitorID" />
        <div>
            <label for="MonitoringDateDt" class="np_label">Дата измерения</label>
            <input type="text" class="input_date" id="MonitoringDateDt" name="MonitoringDateDt" value="@Model.MonitoringDateDt" readonly />
            <label for="MonitoringDateTm" class="np_label">Время измерения</label>
            <input type="text" class="input_time" id="MonitoringDateTm" name="MonitoringDateTm" value="@Model.MonitoringDateTm" autocomplete="off" />
        </div>
        <div>
            <label for="MonitoringComment" class="np_label">Комментарий</label>
            <input type="text" id="MonitoringComment" name="MonitoringComment" value="@Model.MonitoringComment" />
        </div>
    </fieldset>
    <div id="monitoringParamList">
        @await Component.InvokeAsync("MonitoringParams", new { MonitoringID = Model.MonitoringID, MonitorID = Model.MonitorID })
    </div>
</form>
@section scripts{
    <script type="text/javascript">
        $(function () {
            $.datepicker.setDefaults($.datepicker.regional['ru']);
            $(".input_date").datepicker({
                dateFormat: "dd.mm.yy",
                showOtherMonths: true,
                selectOtherMonths: true,
                changeMonth: true,
                changeYear: true,
                showOn: "both",
                //buttonImage: "calendar16.png",
                buttonImageOnly: true,
                buttonText: "выбрать дату"
            });

            // инициализация даты и времени для нового измерения
            //var monId = $('#MonitoringID').val();
            var monId = $('#MonitoringID').attr('value');
            var montId = $('#MonitorID').attr('value');
            if ((monId == false) || (typeof monId == typeof undefined) || (monId == '') || (monId == null)) {
                //если новое измерение устанваливаем текущее время браузера
                //alert(monId);
                var cd = new Date();
                var dt = np_getStringDate(cd, 'date', 'dd:mm:yy', '', '.', '');
                $('#MonitoringDateDt').val(dt);
                var tm = np_getStringDate(cd, 'time', '', 'hh:mm', '', ':');
                $('#MonitoringDateTm').val(tm);
            }
            // маска для ввода времени
            $.mask.definitions['H'] = '[012]';
            $.mask.definitions['M'] = '[012345]';
            $('#MonitoringDateTm').mask('H9:M9', {
                placeholder: "0"
                /*		
                completed: function()
                {
                    var cr = false;
                    var vl = $(this).val().split(':');
                    if ( vl[0]*1 > 23) {vl[0] = '23';cr = true};
                    if ( vl[1]*1 > 59) {vl[1] = '59';cr = true};						
                    if (cr){$(this).val( vl.join(':') )};
                    console.log($(this).val());
                }
                */
            }
            );
            $("#MonitoringDateTm").on('keypress', function (e) {
                var vl = $(this).val().split(':');
                if (vl[0] * 1 > 23) {
                    vl[0] = '00'; vl[1] = '00';
                    $(this).val(vl.join(':'));
                    $(this).unmask();
                    $(this).mask('H9:M9', { placeholder: "0" });
                }
            });

            $("#np_monitoring_edit input[type=text]").on('input change keydown', function (e) {
                if ($('#btnMonitoringSave').attr('disabled')) {
                    $('#btnMonitoringSave').removeAttr('disabled');
                }
            });

            // события при записи
            var adata = new Object();
            adata.fs = 4; // 4 поля
            adata.onSuccess = function () {
                //location.reload();
                if (montId > 0) {
                    var loc = "/Monitoring/MonitoringList/" + montId.toString();
                    window.location.replace(loc); // Перенаправление на список измерений + не сохраняем историю
                };
            }
            // adata.lName = 'ParameterRelations'; - это уже не нужно
            $("#np_monitoring_edit").bind('submit', adata, np_AjaxFormSubmitEx);
            // очистка сообщений об ошибках по клику
            $("#np_monitoring_edit").bind('click', np_AjaxFormInputClick);
            // валидация
            $("#np_monitoring_edit")
                .validate({
                    rules: {
                        MonitoringDateDt: {
                            required: true
                        },
                        MonitoringDateTm: {
                            required: true
                        }
                    },
                    messages: {
                        MonitoringDateDt: {
                            required: "Поле не заполнено"
                        },
                        MonitoringDateTm: {
                            required: "Поле не заполнено"
                        }
                    }
                });
/*
            $.validator.addClassRules({
                ParameterValue: {
                    required: true,
                    messages: {
                        required: "Поле не заполнено"
                    }
                }
            });

            $('#np_monitoring_edit input.ParameterValue').each(function (index, elem) {
                $(elem).rules("add", {
                    required: true,
                    messages: {
                        required: "Поле не заполнено"
                    }
                })
            });

            $('#np_monitoring_edit input.ParameterValue').rules('add', {
                required: true,
                messages: {
                    required: "Поле не заполнено"
                }
            });
*/
        });

    </script>
}








@model NotePlot.Models.ParameterGroup
@{
    string atr_disabled = "disabled";
}
<div class="np-fVrtLayout" id="groupPanel">
    <form action=@ViewBag.Action method="POST" id="group_edit" data-form-mode=@ViewBag.Mode>
        @Html.AntiForgeryToken()
        <div>
            <input type="hidden" id="ParameterGroupID" name="ParameterGroupID" value="@Model.ParameterGroupID" />
            <p class="input-prepend">
                <label for="ParameterGroupShortName" class="np_label">Краткое название</label>
                <input class="ui-widget ui-widget-content ui-corner-all np-ui-input" type="text" id="ParameterGroupShortName" name="ParameterGroupShortName" placeholder="Краткое название" maxlength=24 value="@Model.ParameterGroupShortName" @if (Model.LoginID == 0) { @atr_disabled } />
            </p>
            <p>
                <label for="ParameterGroupName" class="np_label">Название</label>
                @*<input type="text" id="ParameterGroupName" name="ParameterGroupName" placeholder="Название" size="48" value="@Model.ParameterGroupName" @if (Model.LoginID == 0) { @atr_disabled } />*@
                <textarea type="text" rows="2" id="ParameterGroupName" class="ui-widget ui-widget-content ui-corner-all np-ui-input" name="ParameterGroupName" value="@Model.ParameterGroupName" maxlength=48 @if (Model.LoginID == 0) { @atr_disabled }>@Model.ParameterGroupName</textarea>
            </p>
        </div>
    </form>
    <div class="np-buttons">
        @if (Model.LoginID != 0)
        {
            <button id="btnOk" class="np-left ui-button ui-corner-all">Да</button>
        }
        <button id="btnCancel" class="np-right ui-button ui-corner-all">Отмена</button>
    </div>
</div>
<script type="text/javascript">
    $(function () {
        var adata = new Object();
        // шаблон кнопок для вставки в журнал групп измерений #group_edit
        var rowTools =
            '<div class="npRowTools" style="display:block">'
            + '<a href="/ParameterGroup/Edit/{{ParameterGroupID}}" class="npRowEdit np_button" np_dialog_title="Группа параметров">'
            + '<div class="icon"><i class="fa fa-pencil-alt"></i></div>'
            + '</a>'
            + '<a href="/ParameterGroup/Delete/{{ParameterGroupID}}" class="npRowDelete np_button" data-deleted-name="{{ParameterGroupShortName}}">'
            + '<div class="icon"><i class="fa fa-times"></i></div>'
            + '</a>'
            + '</div>';

        adata.onSuccess = function (dta) {
            if ($.fn.DataTable.isDataTable('#parameterGroups')) {
                var
                    jsn = JSON.parse(dta),
                    _table = $("#parameterGroups").DataTable();

                if ($('#group_edit').attr("data-form-mode") == "edit") { // функция изменения данных в строке после редактирования
                    var
                        _tr = _table.row('.selected'), _data = _tr.data();
                    _data[0] = jsn.ParameterGroupID;
                    //_date[1] == rowTools
                    _data[2] = jsn.ParameterGroupShortName;
                    _data[3] = jsn.ParameterGroupName;
                    _tr.data(_data).draw();
                    //_table.$('tr.selected').find(".npRowTools").css("display", "block"); // после обновления display:none
                }
                else
                    if ($('#group_edit').attr("data-form-mode") == "new") { // новая строка
                        rowTools = rowTools.replaceAll("{{ParameterGroupID}}", jsn.ParameterGroupID).replaceAll("{{ParameterGroupShortName}}", jsn.ParameterGroupShortName);
                        _table.row.add([jsn.ParameterGroupID, rowTools, jsn.ParameterGroupShortName, jsn.ParameterGroupName]);//.draw(false);
                        _table.$('tr.selected').removeClass('selected');//.css("display", "none"); // снимаем выделение
                        _table.order([0, 'desc']).draw(); // первая строка - добавленная
                    }
                    else {
                        location.reload();
                    }
                // Находим диалог и закрываем
                var _md = $('#group_edit').parents('.dialog').first().attr('id');
                if (_md != undefined) {
                    $('#' + _md).dialog("close");
                }
            }
            else {
                location.reload();
            }
        }
        $('#btnOk').on('click', function (e) {
            e.preventDefault();
            np_AjaxFormInputClick(); // очистка ошибок
            $('#group_edit').submit();
        });

        $('#btnCancel').on('click', function (e) {
            e.preventDefault();
            // Находим диалог и закрываем
            var _md = $('#groupPanel').parents('.dialog').first().attr('id');
            if (_md != undefined) {
                $('#' + _md).dialog("close");
            }
        });

        $("#group_edit").bind('submit', adata, np_AjaxFormSubmit);
        //$("#group_edit").bind('submit', np_AjaxFormSubmit);
        // очистка сообщений об ошибках по клику
        $("#group_edit").bind('click', np_AjaxFormInputClick);
        $("#group_edit")
            .validate({
                rules: {
                    ParameterGroupShortName: {
                        required: true,
                        minlength: 2
                    },
                    ParameterGroupName: {
                        required: true,
                        minlength: 2
                    },
                },
                messages: {
                    ParameterGroupShortName: {
                        required: "поле должно быть заполнено",
                        minlength: "в поле должно быть минимум 2 символа"
                    },
                    ParameterGroupName: {
                        required: "поле должно быть заполнено",
                        minlength: "в поле должно быть минимум 2 символа"
                    }
                }
            });
    });
</script>
@model NotePlot.Models.Monitor

@{
    string atr_checked = "checked", atr_disabled = "disabled";
}

@section styles{
    <style>
        #np_monitor_edit fieldset legend {
            font-weight: bold;
        }

        .parameters .np_selected {
            background: #F39814;
            color: white;
        }

        .parameters tr {
            background: #DEE3E7;
        }

        .parameters th {
            background: #EEC3C7;
            /*border: 1px solid black;*/
        }
    </style>
}

<p class="np-href">
    <a id="np_MonitorList" href="@Url.Action("MonitorList", "Monitor")">Шаблоны измерений</a> -> @if (Model.MonitorID == null)
    {<a id="np_CurrentMonitor" href="@Url.Action("MonitorNew", "Monitor" , new { id=Model.MonitorID })">Новый шаблон</a>}
    else
    {<a id="np_CurrentMonitor" href="@Url.Action("MonitorEdit", "Monitor" , new { id=Model.MonitorID })">Текущий шаблон</a>}
</p>
<div class="np-tool-bar">
    @if (Model.LoginID != 0)
    {

        <button id="btnMonitorSave" class="ui-button ui-corner-all" @atr_disabled>Сохранить</button>
        <button id="btnMonitorCancel" class="ui-button ui-corner-all" @atr_disabled>Отменить</button>
    }
    <button id="btnReturnMonitorList" class="ui-button ui-corner-all">Шаблоны измерений</button>
</div>
<form id="np_monitor_edit" method="POST" action=@ViewBag.Action>
    @Html.AntiForgeryToken()
    @*@if (Model.LoginID != 0)
        {
            <input type="submit" value="Записать" id="np_monitor_save" @if (Model.LoginID == 0) { @atr_disabled } />
        }*@
    <fieldset>
        <legend>Шаблон измерений</legend>
        <div class="np-inputForm">        
            <input type="hidden" id="MonitorID" name="MonitorID" value="@Model.MonitorID" />
            <input type="hidden" id="LoginID" name="LoginID" value="@Model.LoginID" />
            <div class="np-clearfix">
                <label for="MonitorShortName" class="np-column-left np-column-1 np-ui-input">Краткое название</label>
                <input type="text" id="MonitorShortName" name="MonitorShortName" class="np-column-left np-short-name np-ui-input" maxlength="24" value="@Model.MonitorShortName" />
            </div>
            <div class="np-clearfix">
                <label for="MonitorName" class="np-column-left np-column-1 np-ui-input">Полное название</label>
                @*<input type="text" id="MonitorName" name="MonitorName" value="@Model.MonitorName" />*@
                <textarea class="np-column-left np-short-name np-ui-input" id="MonitorName" name="MonitorName" maxlength=48 value="@Model.MonitorName" @if (Model.LoginID == 0) { @atr_disabled }>@Model.MonitorName</textarea>
            </div>
            @if (Model.MonitorID != null)
            {
               <div class="np-clearfix">
                    <label for="Active" class="np-column-left np-column-1 np-ui-input">Доступен</label>
                    <input type="checkbox" id="Active" name="Active" value="@Model.Active" class="np-column-left np-ui-input" @if (@Model.Active) { @atr_checked } @if (Model.LoginID == 0) { @atr_disabled } />
                </div>
            }
            else
            {
               <div class="np-clearfix">
                   <input type="checkbox" id="Active" name="Active" class="np-column-left np-ui-input" value="1" hidden checked />
               </div>
            }
        </div>
    </fieldset>
    <div id="monitorParametersPanel">
        @await Component.InvokeAsync("MonitorParams", new { MonitorID = @Model.MonitorID, LoginID = @Model.LoginID })
    </div>
</form>
@section scripts{
    <script type="text/javascript">
        $(function () {
            var wrapper = $(".lookupField"),
                inp = wrapper.find("input"),
                btn = wrapper.find(".button"),
                lbl = wrapper.find("mark");

            // Crutches for the :focus style:
            inp.focus(function () {
                wrapper.addClass("focus");
            }).blur(function () {
                wrapper.removeClass("focus");
            });

            var file_api = (window.File && window.FileReader && window.FileList && window.Blob) ? true : false;

            inp.change(function () {
                var i = 0;
            }).change();

            $(document).ready(function () { fix(); });
            $(window).resize(function () {
                fix();
                $(".lookupField input").triggerHandler("change");
            });

            //=================================
            // глобальный класс для добавления параметров
            np_insertRow = new np_InsertRow(
                "#monitorParameters",
                "<tr>" +
                "<td hidden><input type='text' id='ParameterID' name='ParameterID' value='{ParameterID}'/></td>" +
                "<td>{ParameterShortName}</td>" +
                "<td>{ParameterTypeName}</td>" +
                "<td hidden></td>" +
                "<td><input type='checkbox' id='PacketParameterActive' name='PacketParameterActive' value='1' checked /></td></tr > ",
                ["ParameterID", "ParameterShortName", "ParameterTypeName"]
            )
            // события при записи
            var adata = new Object();
            adata.onSuccess = function () {
                //location.reload();
                window.location.replace("/Monitor/MonitorList"); // Перенаправление на список + не сохраняем историю
            }

            //============================================================
            $("#np_monitor_edit input[type=text],input[type=checkbox],textarea").on('input change keypress', function (e) {
                refreshPage();
            });
            $('#btnMonitorSave').on('click', function (e) {
                e.preventDefault();
                np_AjaxFormInputClick(); // очистка ошибок
                $('#np_monitor_edit').submit();
            });

            $('#btnMonitorCancel').on('click', function (e) {
                np_LoaderShow();
                document.getElementById("np_CurrentMonitor").click()
                //location.reload();
            });

            $('#btnReturnMonitorList').on('click', function (e) {
                np_LoaderShow();
                document.getElementById("np_MonitorList").click()
            });

            adata.fs = 3; // парсинг трех полей
            $("#np_monitor_edit").bind('submit', adata, np_AjaxFormSubmitEx);
            // очистка сообщений об ошибках по клику
            $("#np_monitor_edit").bind('click', np_AjaxFormInputClick);
            $("#np_monitor_edit")
                .validate({
                    rules: {
                        MonitorShortName: {
                            required: true,
                            minlength: 2
                        },
                        MonitorName: {
                            required: true
                        }
                    },
                    messages: {
                        ParameterShortName: {
                            required: "поле не заполнено или заполнено не верно",
                            minlength: "в поле должно быть минимум 2 символа",
                        },
                        ParameterName: {
                            required: "поле не заполнено или заполнено не верно",
                            minlength: "в поле должно быть минимум 2 символа",
                        }
                    }
                });
        });
        function refreshPage() {
            if ($('#btnMonitorSave').attr('disabled')) {
                $('#btnMonitorSave').removeAttr('disabled');
            }
            if ($('#btnMonitorCancel').attr('disabled')) {
                $('#btnMonitorCancel').removeAttr('disabled');
            }
        }
    </script>
}



